Working
0.000 0.000 0.000 0.000 0.000 0.000 1.000 1.000 1.000 1.000 1.000 1.000 
3 3
0.000 0.000 1.000 1.000 1.000 1.000 3.200 3.200 0.800 0.800 2.100 2.100 
3 3
1.000 1.000 1.300 1.300 2.000 2.000 2.600 2.600 1.000 1.000 1.300 1.300 1.000 1.000 1.300 1.300 2.000 2.000 2.600 2.600 1.000 1.000 1.300 1.300 2.000 2.000 2.600 2.600 
3 3

Taxa:3, Characters: 6, Partitions: 3
  Partition 1
    Num. chars: 2
    First state: 0.000000
  Partition 2
    Num. chars: 2
    First state: 0.000000
  Partition 3
    Num. chars: 2
    First state: 1.000000
    Segments per taxon: 2 3 2 

0:1 1:1 2:1 1 1 0 1 1 

Adding tip 2 randomly

Adding first taxon
Root node: id=5, desc1 id=2
Des1 node: id=2, root  id=5
0:1 1:1 2:0 3:1 4:1 1 1 0 1 0 

Adding tip 4 randomly

About to add root's descendent 2
Root:5
About to add root as node's ancestor
About to increment total taxa
Root node: id=5, desc1 id=2
Root node: id=5, desc2 id=4
Des1 node: id=4, root  id=5
Done.

0:1 1:1 1 0 0 1 0 

Adding tip 1 randomly

About to insert new node into tree
Inserting onto branch from 5 to 2
New node: id=1, anc id=6
total taxa in tree: 3

0:1 0 0 0 1 0 

Adding tip 0 randomly

About to insert new node into tree
Inserting onto branch from 5 to 6
New node: id=0, anc id=7
total taxa in tree: 4

0:0 1:0 2:0 3:1 0 0 0 0 0 

Adding tip 3 randomly

About to insert new node into tree
Inserting onto branch from 5 to 7
New node: id=3, anc id=8
total taxa in tree: 5


Current node: 5, Descendent 1: 8, Descendent 2: 4, 
Current node: 8, Descendent 1: 3, Descendent 2: 7, 
Current node: 3,  
Current node: 7, Descendent 1: 0, Descendent 2: 6, 
Current node: 0,  
Current node: 6, Descendent 1: 1, Descendent 2: 2, 
Current node: 1,  
Current node: 2,  
Current node: 4,  
-- 5  -- 8    -- 3
    -- 7      -- 0
      -- 6        -- 1
        -- 2
  -- 4

Final branch_count = 8

Taxon count: 5
New node:5
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (8)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (3)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
Checking start tree
Taxon count: 5
New node:5
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (8)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (3)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
Final branch_count = 8



0 - Starting SPR at branch 5 to 8

 Starting tree:
-- 5-- 8  -- 3
  -- 7    -- 0
    -- 6      -- 1
      -- 2
-- 4


 Splitting trees at branch 5 -> 8
  Tree has 5 taxa
  Making list of branches to check that branch to split at exists.
Final branch_count = 8
   Index: 0
   Branch 5 -> 8
   Index: 1
   Branch 8 -> 3
   Index: 2
   Branch 8 -> 7
   Index: 3
   Branch 7 -> 0
   Index: 4
   Branch 7 -> 6
   Index: 5
   Branch 6 -> 1
   Index: 6
   Branch 6 -> 2
   Index: 7
   Branch 5 -> 4
Branch to split at = 5 -> 8
Copying ntaxa
Copied ntaxa
Copy of original tree within split tree function:
-- 5-- 8  -- 3
  -- 7    -- 0
    -- 6      -- 1
      -- 2
-- 4

Current node: 5, Descendent 1: 8, Descendent 2: 4, 
Current node: 8, Descendent 1: 3, Descendent 2: 7, 
Current node: 3,  
Current node: 7, Descendent 1: 0, Descendent 2: 6, 
Current node: 0,  
Current node: 6, Descendent 1: 1, Descendent 2: 2, 
Current node: 1,  
Current node: 2,  
Current node: 4,  
Taxon count: 5
New node:5
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (8)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (3)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
Created subtrees via malloc, finding node to remove with id: 5

 Finding node 5, currently on node 5
  Found it!
  Checking 5's descendant1...

 Finding node 5, currently on node 8
  Checking 8's descendant1...

 Finding node 5, currently on node 3
  Checking 3's descendant1...
  Checking 3's descendant2...
  Finished on node 3
  Checking 8's descendant2...

 Finding node 5, currently on node 7
  Checking 7's descendant1...

 Finding node 5, currently on node 0
  Checking 0's descendant1...
  Checking 0's descendant2...
  Finished on node 0
  Checking 7's descendant2...

 Finding node 5, currently on node 6
  Checking 6's descendant1...

 Finding node 5, currently on node 1
  Checking 1's descendant1...
  Checking 1's descendant2...
  Finished on node 1
  Checking 6's descendant2...

 Finding node 5, currently on node 2
  Checking 2's descendant1...
  Checking 2's descendant2...
  Finished on node 2
  Finished on node 6
  Finished on node 7
  Finished on node 8
  Checking 5's descendant2...

 Finding node 5, currently on node 4
  Checking 4's descendant1...
  Checking 4's descendant2...
  Finished on node 4
  Finished on node 5
Found node to remove, id: 5
Splitting tree at root node 5
subtree1 has 4 taxa

Current node: 8, Descendent 1: 3, Descendent 2: 7, 
Current node: 3,  
Current node: 7, Descendent 1: 0, Descendent 2: 6, 
Current node: 0,  
Current node: 6, Descendent 1: 1, Descendent 2: 2, 
Current node: 1,  
Current node: 2,  subtree2 has 1 taxa

Current node: 4,  Taxon count: 4
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (3)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
Taxon count: 1
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2

 Created subtrees, with 4 and 1 taxa
Final branch_count = 6


REJOINING
Reattaching as sister to node 3 on branch 8 to 3


Starting join_trees function:
Copying ntaxa
Copied ntaxa

Checking subtree 1
Taxon count: 4
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (3)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
Copying ntaxa
Copied ntaxa

Checking subtree 2
Taxon count: 1
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2

 Finding node 3, currently on node 8
  Checking 8's descendant1...

 Finding node 3, currently on node 3
  Found it!
  Checking 3's descendant1...
  Checking 3's descendant2...
  Finished on node 3
  Checking 8's descendant2...

 Finding node 3, currently on node 7
  Checking 7's descendant1...

 Finding node 3, currently on node 0
  Checking 0's descendant1...
  Checking 0's descendant2...
  Finished on node 0
  Checking 7's descendant2...

 Finding node 3, currently on node 6
  Checking 6's descendant1...

 Finding node 3, currently on node 1
  Checking 1's descendant1...
  Checking 1's descendant2...
  Finished on node 1
  Checking 6's descendant2...

 Finding node 3, currently on node 2
  Checking 2's descendant1...
  Checking 2's descendant2...
  Finished on node 2
  Finished on node 6
  Finished on node 7
  Finished on node 8
Joining trees, to sister node 3
Sisters ancestor is 8
11
14
-- 8-- 5  -- 4
  -- 3
-- 7  -- 0
  -- 6    -- 1
    -- 2
Joined tree: Root node's ancestor is NULL

Checking joined tree
Taxon count: 5
New node:8
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (5)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:5
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (4)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:4
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:3
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:7
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (0)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:0
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:6
Checking root node
Checking for matching NULL pointers
Checking for pointers match with desc 1 (1)
Checking for matching NULL pointers part 2
Checking for pointers match with desc 2
New node:1
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2
New node:2
Checking root node
Checking for matching NULL pointers
Checking for matching NULL pointers part 2

  Print of joined tree:
-- 8-- 5  -- 4
  -- 3
-- 7  -- 0
  -- 6    -- 1
    -- 2

Starting rerooting on node 0
Current root is 8

Current node: 8, Descendent 1: 5, Descendent 2: 7, 
Current node: 5, Descendent 1: 4, Descendent 2: 3, 
Current node: 4,  
Current node: 3,  
Current node: 7, Descendent 1: 0, Descendent 2: 6, 
Current node: 0,  
Current node: 6, Descendent 1: 1, Descendent 2: 2, 
Current node: 1,  
Current node: 2,  
 Finding node 0, currently on node 8
  Checking 8's descendant1...

 Finding node 0, currently on node 5
  Checking 5's descendant1...

 Finding node 0, currently on node 4
  Checking 4's descendant1...
  Checking 4's descendant2...
  Finished on node 4
  Checking 5's descendant2...

 Finding node 0, currently on node 3
  Checking 3's descendant1...
  Checking 3's descendant2...
  Finished on node 3
  Finished on node 5
  Checking 8's descendant2...

 Finding node 0, currently on node 7
  Checking 7's descendant1...

 Finding node 0, currently on node 0
  Found it!
  Checking 0's descendant1...
  Checking 0's descendant2...
  Finished on node 0
  Checking 7's descendant2...

 Finding node 0, currently on node 6
  Checking 6's descendant1...

 Finding node 0, currently on node 1
  Checking 1's descendant1...
  Checking 1's descendant2...
  Finished on node 1
  Checking 6's descendant2...

 Finding node 0, currently on node 2
  Checking 2's descendant1...
  Checking 2's descendant2...
  Finished on node 2
  Finished on node 6
  Finished on node 7
  Finished on node 8
Finding anc node: 7

 Finding node 7, currently on node 8
  Checking 8's descendant1...

 Finding node 7, currently on node 5
  Checking 5's descendant1...

 Finding node 7, currently on node 4
  Checking 4's descendant1...
  Checking 4's descendant2...
  Finished on node 4
  Checking 5's descendant2...

 Finding node 7, currently on node 3
  Checking 3's descendant1...
  Checking 3's descendant2...
  Finished on node 3
  Finished on node 5
  Checking 8's descendant2...

 Finding node 7, currently on node 7
  Found it!
  Checking 7's descendant1...

 Finding node 7, currently on node 0
  Checking 0's descendant1...
  Checking 0's descendant2...
  Finished on node 0
  Checking 7's descendant2...

 Finding node 7, currently on node 6
  Checking 6's descendant1...

 Finding node 7, currently on node 1
  Checking 1's descendant1...
  Checking 1's descendant2...
  Finished on node 1
  Checking 6's descendant2...

 Finding node 7, currently on node 2
  Checking 2's descendant1...
  Checking 2's descendant2...
  Finished on node 2
  Finished on node 6
  Finished on node 7
  Finished on node 8
Finding des node: 0

 Finding node 0, currently on node 8
  Checking 8's descendant1...

 Finding node 0, currently on node 5
  Checking 5's descendant1...

 Finding node 0, currently on node 4
  Checking 4's descendant1...
  Checking 4's descendant2...
  Finished on node 4
  Checking 5's descendant2...

 Finding node 0, currently on node 3
  Checking 3's descendant1...
  Checking 3's descendant2...
  Finished on node 3
  Finished on node 5
  Checking 8's descendant2...

 Finding node 0, currently on node 7
  Checking 7's descendant1...

 Finding node 0, currently on node 0
  Found it!
  Checking 0's descendant1...
  Checking 0's descendant2...
  Finished on node 0
  Checking 7's descendant2...

 Finding node 0, currently on node 6
  Checking 6's descendant1...

 Finding node 0, currently on node 1
  Checking 1's descendant1...
  Checking 1's descendant2...
  Finished on node 1
  Checking 6's descendant2...

 Finding node 0, currently on node 2
  Checking 2's descendant1...
  Checking 2's descendant2...
  Finished on node 2
  Finished on node 6
  Finished on node 7
  Finished on node 8
Branch exists
Tree needs rerooting...
Created new root node
New root node, desc1=7 and desc2=0
Starting iterations...
Currently rerooting node: 7
 with rearranged descendents 8 and 6
  and ancestor 8
   which is changed to 6

Exited while loop, node_to_reroot is 8
Node_to_reroot descs are 5 and 7
Old desc: 7

Tree's root node is: 8
Reached old root
Descendent 2 is last rerooted node (future ancestor)

 so switching descendent 1 (5)'s ancestor (8) to 7
Also switching desc1 (8) of node 7 to 5
Current node: 8, Descendent 1: 7, Descendent 2: 0, 
Current node: 7, Descendent 1: 5, Descendent 2: 6, 
Current node: 5, Descendent 1: 4, Descendent 2: 3, 
Current node: 4,  
Current node: 3,  
Current node: 6, Descendent 1: 1, Descendent 2: 2, 
Current node: 1,  
Current node: 2,  
Current node: 0,  Finished rerooting tree
Taxa:3, Characters: 6, Partitions: 3
  Partition 1
    Num. chars: 2
    First state: 0.000000
  Partition 2
    Num. chars: 2
    First state: 0.000000
  Partition 3
    Num. chars: 2
    First state: 1.000000
    Segments per taxon: 2 3 2 
Working on partition 1 of type 0
Working on partition 2 of type 1
Working on partition 3 of type 2
